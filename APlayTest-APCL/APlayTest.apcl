<apcl:apcl version="2.1" xmlns:apcl="http://www.aplaypowered.com/apcl">
  <role name="Client" roleType="Client" remoteObject="Client"/>
  <role name="Server" roleType="Server"/>
  <target role="Server" language="C# .Net" userCompiledPath="../APlayTest.Server/userCompiled/" libPath="../APlayTest.Server/lib/" stubPath="../APlayTest.Server/stubs/" active="true" targetPath="" baseNamespace="APlayTest.Server"/>
  <target role="Client" language="C# .Net" userCompiledPath="../APlayTest.Client/userCompiled/" libPath="../APlayTest.Client/lib/" stubPath="../APlayTest.Client/stubs/" active="true" targetPath="" baseNamespace="APlayTest.Client"/>
  <namespace>
    <struct name="AplayPoint">
      <code><![CDATA[float64 X;
float64 Y; ]]></code>
      <__designerPresentation>null</__designerPresentation>
    </struct>
    <struct name="AplaySize">
      <code><![CDATA[float32 Width;
float32 Height;]]></code>
      <__designerPresentation>null</__designerPresentation>
    </struct>
    <class name="BlockSymbol">
      <code><![CDATA[[ Server -> All ]

int32 Id;
List<Connector> InputConnectors;

[Client -> Server]

void SetPosition(AplayPoint position, Client client);
void AddInputConnector(Connector connector, Client client);
void RemoveInputConnector(int32 connectorId, Client client);
void SetOutputConnector(Connector connector, Client client);

[All -> All]
//Do only use those properties for undo/redo purposes.
//Use the setter functions to have Undo/Redo.
float64 PositionX;
float64 PositionY;
AplaySize Size;
Connector OutputConnector;

[All -> Server]
List<Connection> GetAttachedConnections();

]]></code>
      <__designerPresentation>null</__designerPresentation>
    </class>
    <class name="Client">
      <code><![CDATA[[Server -> Client]
int32 Id;
Project CurrentProject;
ProjectManager ProjectManager;
UndoManager UndoManager;

[Client -> Server]
User CurrentUser;
boolean TryGetId(int32 id, Client client);
]]></code>
      <__designerPresentation>
        <x>59</x>
        <y>13</y>
      </__designerPresentation>
    </class>
    <class name="Connection">
      <code><![CDATA[[ Server -> All ]

int32 Id;

[All -> All]
//Do only use those properties for undo/redo purposes.
//Use the setter functions to have Undo/Redo.
uint32 Color;

Connector From;
Connector To;

AplayPoint FromPosition;
AplayPoint ToPosition;

[Client -> Server]

void SetFromPosition(AplayPoint position, Client client);
void SetToPosition(AplayPoint position, Client client);

void SetColor(uint32 Color, Client client);]]></code>
      <__designerPresentation>null</__designerPresentation>
    </class>
    <class name="Connector">
      <code><![CDATA[[ Server -> All ]

int32 Id;

[All -> All]
//Do only use those properties for undo/redo purposes.
//Use the setter functions to have Undo/Redo.
ConnectorDirection Direction;
List<Connection> Connections;
AplayPoint Position;

[Client -> Server]
void AddConnection(Connection connection, Client client);

]]></code>
      <__designerPresentation>null</__designerPresentation>
    </class>
    <enum name="ConnectorDirection">
      <code><![CDATA[//TODO: Your Enum Values here:
Input=1;
Output=2;]]></code>
      <__designerPresentation>null</__designerPresentation>
    </enum>
    <struct name="HistoryEntry">
      <code><![CDATA[int32 Id;

WString Description;]]></code>
      <__designerPresentation>null</__designerPresentation>
    </struct>
    <class name="Project" userCreated="servers">
      <code><![CDATA[//TODO: Your class based communication here:
[Server -> All]
int32 Id;
ProjectDetail ProjectDetail;

[Server -> Client]
SheetManager SheetManager;


]]></code>
    </class>
    <struct name="ProjectDetail">
      <code><![CDATA[//TODO: Your Properties here:
WString Name;
WString CreatedBy;
Date CreationDate;
]]></code>
      <__designerPresentation>null</__designerPresentation>
    </struct>
    <class name="ProjectManager">
      <code><![CDATA[[ Client -> Server ]

void JoinProject(Client sender, int32 projectId);
void CreateProject(Client sender, WString name);
void SearchProjects(WString searchString);
void SelectProject(int32 projectId);

[Server -> Client]
boolean CanJoinProject;
boolean CanCreateProject;
List<Project> Projects;


[Server -> Client]
Project SelectedProject;
void JoinedProject(Project project);
Client DataClient;]]></code>
    </class>
    <class name="Sheet" userCreated="servers">
      <code><![CDATA[//TODO: Your class based communication here:


[ Client -> Server ]
  
void SetName(WString name, Client client);

//Blocks handling  
BlockSymbol CreateBlockSymbol();
void Add(BlockSymbol blockSymbol, Client client);
void Remove(BlockSymbol blockSymbol, Client client);

//Connections handling
Connection CreateConnection();
void AddConnection(Connection connection, Client client);
void RemoveConnection(Connection connection, Client client);


[Server  -> All]
WString Name;
List<BlockSymbol> BlockSymbols;
List<Connection> Connections;
int32 Id;

]]></code>
      <__designerPresentation>null</__designerPresentation>
    </class>
    <class name="SheetManager" userCreated="servers">
      <code><![CDATA[[ Server -> Client ]
List<Sheet> Sheets;

[Client -> Server]
Sheet CreateSheet();
void AddSheet(Sheet sheet);]]></code>
      <__designerPresentation>null</__designerPresentation>
    </class>
    <class name="UndoManager">
      <code><![CDATA[//TODO: Your class based communication here:
[ Client -> Server ]

void StartTransaction(WString description);
void EndTransaction();
void CancelTransaction();
void ExecuteUndo();
void ExecuteRedo();
void UndoRedoTo(HistoryEntry destinationEntry);

[Server -> All]
Client DataClient;
boolean CanUndo;
boolean CanRedo;

List<HistoryEntry> History;
int32 ActiveHistoryEntryId;
]]></code>
      <__designerPresentation>null</__designerPresentation>
    </class>
    <class name="User">
      <code><![CDATA[//TODO: Your class based communication here:
[ Client -> Server ]

WString Name;
]]></code>
      <__designerPresentation>null</__designerPresentation>
    </class>
    <__designerPresentation>null</__designerPresentation>
  </namespace>
</apcl:apcl>